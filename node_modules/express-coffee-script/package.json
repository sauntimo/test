{
  "name": "express-coffee-script",
  "version": "0.2.0",
  "description": "CoffeeScript middleware for Express",
  "author": {
    "name": "Doğan Çelik",
    "email": "dogancelik93@gmail.com"
  },
  "license": "MIT",
  "keywords": [
    "express",
    "coffee-script",
    "coffeescript",
    "middleware",
    "connect"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/dogancelik/express-coffee-script.git"
  },
  "bugs": {
    "url": "https://github.com/dogancelik/express-coffee-script/issues"
  },
  "main": "lib/index.js",
  "scripts": {
    "prepublish": "coffee -bo lib/ src/",
    "watch": "coffee -wbo lib/ src/"
  },
  "directories": {
    "lib": "lib"
  },
  "dependencies": {
    "bluebird": "^2.9.25",
    "coffee-script": "^1.9.2",
    "debug": "^2.2.0",
    "mkdirp": "^0.5.0"
  },
  "devDependencies": {
    "express": "^4.12.3"
  },
  "readme": "# Express Coffee Script\r\n\r\nAn Express middleware for CoffeeScript.\r\n\r\n[![NPM](https://nodei.co/npm/express-coffee-script.png)](https://nodei.co/npm/express-coffee-script/)\r\n\r\n## How to use?\r\nPut it into your Express like this:\r\n```coffee\r\ncoffee = require 'express-coffee-script'\r\napp = express()\r\n\r\napp.use coffee(\r\n  src: 'src/coffee'\r\n  dest: 'public/js'\r\n  prefix: '/js' # will remove /js from .coffee file path\r\n  compilerOpts: bare: true\r\n)\r\n\r\napp.use express.static 'public'\r\n```\r\n\r\n*express-coffee-script* compiles your CoffeeScript files only, it doesn't serve them. You need to use *express.static* because *express.static* serves your compiled JS files not this middleware.\r\n\r\n## How to install?\r\n[![NPM](https://nodei.co/npm/express-coffee-script.png?mini=true)](https://nodei.co/npm/express-coffee-script/)\r\n\r\nEvery version under 1.0 is beta, this means it may have bugs, use with care :wink:\r\n\r\n## Options\r\n\r\n### src (*string*)\r\nThis is a directory that contains your CoffeeScript files.\r\n\r\n### dest (*string*)\r\nThis is a directory where your CoffeeScript files will be saved to.\r\n\r\n### prefix (*string*)\r\nLet's say:\r\n```cson\r\n{\r\n  'src': 'src/coffee'\r\n  'public': 'public/js'\r\n  'prefix': '/js'\r\n}\r\n```\r\nThis is our configuration for our middleware.\r\n\r\nIf we request `localhost/js/test.js`:\r\n\r\nOur middleware will look for this file: `src/coffee/js/test.js`\r\n\r\nBut if we add *prefix* as `/js`:\r\n\r\nOur middleware will look for this file: `src/coffee/test.js`\r\n\r\n### compile (*function*)\r\nWith this function you can customize your compiler:\r\n\r\nIn this example we will use `coffee-react` instead of `coffee-script`\r\n```coffee\r\napp.use coffee\r\n  src: 'src/coffee'\r\n  dest: 'public/js'\r\n  prefix: '/js'\r\n  compile: require('coffee-react')\r\n  compilerOpts: { bare: true }\r\n  ext: '.cjsx'\r\n```\r\n\r\n### compilerOpts (*object*)\r\nThis object will be passed to the compile function.\r\n\r\n### ext (*string*)\r\nMiddleware will look for this file extension. Default value is `.coffee`\r\n\r\n## Screenshot\r\n\r\n![Screenshot](extras/screenshot.jpg)\r\n\r\nNote: Screenshot is taken in *DEBUG* mode. You will not see these messages unless you set DEBUG to `express-coffee-script`\r\n",
  "readmeFilename": "README.md",
  "_id": "express-coffee-script@0.2.0",
  "_from": "express-coffee-script@"
}
